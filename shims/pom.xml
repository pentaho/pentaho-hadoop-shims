<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.pentaho</groupId>
    <artifactId>pentaho-hadoop-shims</artifactId>
    <version>9.0.0.0-SNAPSHOT</version>
  </parent>
  <artifactId>pentaho-hadoop-shims-list</artifactId>
  <version>9.0.0.0-SNAPSHOT</version>
  <packaging>pom</packaging>
  <properties>
    <oss.license.directory>${project.build.directory}/oss_license</oss.license.directory>
    <xerces.version>2.8.1</xerces.version>
    <com.yammer.metrics.version>2.2.0</com.yammer.metrics.version>
    <org.safehaus.jug.version>2.0.0</org.safehaus.jug.version>
    <commons-lang.version>2.6</commons-lang.version>
    <com.igormaznitsa.jcp.version>6.1.2</com.igormaznitsa.jcp.version>
    <dependency.maven-bundle-plugin.version>3.2.0</dependency.maven-bundle-plugin.version>
    <bundle.export.version>8.0.513.cdh</bundle.export.version>
    <org.osgi.core.version>4.3.1</org.osgi.core.version>
    <shim-bundle-plugin.version>1.0</shim-bundle-plugin.version>
    <bundle.karaf.export.packages>org.apache.htrace;version=${bundle.export.version},
      org.pentaho.hadoop.mapreduce;version=${bundle.export.version},
      com.google.common.annotations;version=${bundle.export.version},
      org.codehaus.jackson;version=${bundle.export.version},
      org.apache.hadoop.security;version=${bundle.export.version},
      org.apache.hadoop.security.token;version=${bundle.export.version},
      org.apache.hadoop.conf;version=${bundle.export.version},
      org.apache.hadoop.fs;version=${bundle.export.version},
      org.apache.hadoop.hdfs;version=${bundle.export.version},
      com.google.protobuf;version=${bundle.export.version},
      org.apache.commons.codec;version=${bundle.export.version},
      org.apache.commons.codec.binary;version=${bundle.export.version},
      org.apache.hadoop.classification;version=${bundle.export.version},
      org.apache.commons.cli;version=${bundle.export.version},
      org.apache.hadoop.io;version=${bundle.export.version},
      org.apache.hadoop.io.compress;version=${bundle.export.version},
      org.apache.hadoop.net;version=${bundle.export.version},
      org.apache.hadoop.ipc;version=${bundle.export.version},
      org.apache.hadoop.ipc.metrics;version=${bundle.export.version},
      org.apache.hadoop;version=${bundle.export.version},
      org.apache.hadoop.gateway;version=${bundle.export.version},
      org.apache.hadoop.util;version=${bundle.export.version},
      org.apache.hadoop.metrics2;version=${bundle.export.version},
      org.apache.hadoop.mapred;version=${bundle.export.version},
      org.apache.hadoop.mapreduce;version=${bundle.export.version},
      org.apache.zookeeper;version=${bundle.export.version},
      org.apache.jute;version=${bundle.export.version},
      org.apache.hadoop.gateway.shell;version=${bundle.export.version},
      io.netty;version=${bundle.export.version},
      io.netty.channel;version=${bundle.export.version},
      com.yammer.metrics;version=${bundle.export.version},
      org.pentaho.hdfs.vfs;version=${bundle.export.version}</bundle.karaf.export.packages>
  </properties>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.pentaho</groupId>
        <artifactId>pentaho-hadoop-shims-api</artifactId>
        <version>${pentaho-hadoop-shims-api.version}</version>
        <scope>provided</scope>
        <exclusions>
          <exclusion>
            <artifactId>*</artifactId>
            <groupId>*</groupId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.pentaho</groupId>
        <artifactId>pentaho-hadoop-shims-api</artifactId>
        <version>${pentaho-hadoop-shims-api.version}</version>
        <classifier>tests</classifier>
        <scope>test</scope>
        <exclusions>
          <exclusion>
            <artifactId>*</artifactId>
            <groupId>*</groupId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>pentaho</groupId>
        <artifactId>pentaho-hdfs-vfs</artifactId>
        <version>${pentaho-hdfs-vfs.version}</version>
        <scope>compile</scope>
        <exclusions>
          <exclusion>
            <artifactId>*</artifactId>
            <groupId>*</groupId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.safehaus.jug</groupId>
        <artifactId>jug-lgpl</artifactId>
        <version>${org.safehaus.jug.version}</version>
        <scope>test</scope>
        <exclusions>
          <exclusion>
            <artifactId>*</artifactId>
            <groupId>*</groupId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.osgi</groupId>
        <artifactId>org.osgi.core</artifactId>
        <version>${org.osgi.core.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>com.yammer.metrics</groupId>
        <artifactId>metrics-core</artifactId>
        <version>${com.yammer.metrics.version}</version>
        <scope>compile</scope>
        <exclusions>
          <exclusion>
            <artifactId>*</artifactId>
            <groupId>*</groupId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>commons-lang</groupId>
        <artifactId>commons-lang</artifactId>
        <version>${commons-lang.version}</version>
        <scope>compile</scope>
        <exclusions>
          <exclusion>
            <artifactId>*</artifactId>
            <groupId>*</groupId>
          </exclusion>
        </exclusions>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <dependencies>
    <dependency>
      <groupId>org.pentaho</groupId>
      <artifactId>pentaho-hadoop-shims-common-shim</artifactId>
      <version>${project.version}</version>
      <classifier>sources</classifier>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.pentaho</groupId>
      <artifactId>pentaho-hadoop-shims-common-hbase-comparators-api</artifactId>
      <version>${project.version}</version>
      <classifier>sources</classifier>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.pentaho</groupId>
      <artifactId>pentaho-hadoop-shims-common-modern</artifactId>
      <version>${project.version}</version>
      <classifier>sources</classifier>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.pentaho</groupId>
      <artifactId>pentaho-hadoop-shims-common-mapred</artifactId>
      <version>${project.version}</version>
      <classifier>sources</classifier>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.pentaho</groupId>
      <artifactId>pentaho-hadoop-shims-common-hbase</artifactId>
      <version>${project.version}</version>
      <classifier>sources</classifier>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.pentaho</groupId>
      <artifactId>pentaho-hadoop-shims-hbase-comparators</artifactId>
      <version>${project.version}</version>
      <classifier>sources</classifier>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.pentaho</groupId>
      <artifactId>pentaho-hadoop-shims-common-hadoop-shim</artifactId>
      <version>${project.version}</version>
      <classifier>sources</classifier>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.powermock</groupId>
      <artifactId>powermock-reflect</artifactId>
    </dependency>
    <dependency>
      <groupId>org.powermock</groupId>
      <artifactId>powermock-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.powermock</groupId>
      <artifactId>powermock-api-mockito</artifactId>
    </dependency>
    <dependency>
      <groupId>org.powermock</groupId>
      <artifactId>powermock-api-support</artifactId>
    </dependency>
    <dependency>
      <groupId>org.powermock</groupId>
      <artifactId>powermock-module-junit4</artifactId>
    </dependency>
    <dependency>
      <groupId>org.powermock</groupId>
      <artifactId>powermock-module-junit4-common</artifactId>
    </dependency>
  </dependencies>
  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <artifactId>maven-dependency-plugin</artifactId>
          <executions>
            <execution>
              <id>unpack-common-sources</id>
              <phase>process-sources</phase>
              <goals>
                <goal>unpack</goal>
              </goals>
              <configuration>
                <artifactItems>
                  <artifactItem>
                    <groupId>org.pentaho</groupId>
                    <artifactId>pentaho-hadoop-shims-common-shim</artifactId>
                    <classifier>sources</classifier>
                    <overWrite>false</overWrite>
                    <outputDirectory>${project.build.directory}/src</outputDirectory>
                  </artifactItem>
                  <artifactItem>
                    <groupId>org.pentaho</groupId>
                    <artifactId>pentaho-hadoop-shims-common-modern</artifactId>
                    <classifier>sources</classifier>
                    <overWrite>false</overWrite>
                    <outputDirectory>${project.build.directory}/src</outputDirectory>
                  </artifactItem>
<!--
                  <artifactItem>
                    <groupId>org.pentaho</groupId>
                    <artifactId>pentaho-hadoop-shims-common-hbase-comparators-api</artifactId>
                    <classifier>sources</classifier>
                    <overWrite>false</overWrite>
                    <outputDirectory>${project.build.directory}/src</outputDirectory>
                    <excludes>**/IDeserializedBooleanComparator.java,**/IDeserializedNumericComparator.java</excludes>
                  </artifactItem>
                  <artifactItem>
                    <groupId>org.pentaho</groupId>
                    <artifactId>pentaho-hadoop-shims-hbase-comparators</artifactId>
                    <classifier>sources</classifier>
                    <overWrite>false</overWrite>
                    <outputDirectory>${project.build.directory}/src</outputDirectory>
                    <excludes>**/DeserializedBooleanComparator.java,**/DeserializedNumericComparator.java</excludes>
                  </artifactItem>
-->
                  <artifactItem>
                    <groupId>org.pentaho</groupId>
                    <artifactId>pentaho-hadoop-shims-common-mapred</artifactId>
                    <classifier>sources</classifier>
                    <overWrite>false</overWrite>
                    <outputDirectory>${project.build.directory}/src</outputDirectory>
                  </artifactItem>
                  <artifactItem>
                    <groupId>org.pentaho</groupId>
                    <artifactId>pentaho-hadoop-shims-common-hadoop-shim</artifactId>
                    <classifier>sources</classifier>
                    <overWrite>false</overWrite>
                    <outputDirectory>${project.build.directory}/src</outputDirectory>
                  </artifactItem>
<!--
                  <artifactItem>
                    <groupId>org.pentaho</groupId>
                    <artifactId>pentaho-hadoop-shims-common-hbase</artifactId>
                    <classifier>sources</classifier>
                    <overWrite>false</overWrite>
                    <outputDirectory>${project.build.directory}/src</outputDirectory>
                  </artifactItem>
-->
                  <artifactItem>
                    <groupId>org.pentaho</groupId>
                    <artifactId>pentaho-hadoop-shims-common-shim</artifactId>
                    <classifier>test-sources</classifier>
                    <overWrite>false</overWrite>
                    <outputDirectory>${project.build.directory}/test-src</outputDirectory>
                  </artifactItem>
                  <artifactItem>
                    <groupId>org.pentaho</groupId>
                    <artifactId>pentaho-hadoop-shims-common-modern</artifactId>
                    <classifier>test-sources</classifier>
                    <overWrite>false</overWrite>
                    <outputDirectory>${project.build.directory}/test-src</outputDirectory>
                  </artifactItem>
<!--
                  <artifactItem>
                    <groupId>org.pentaho</groupId>
                    <artifactId>pentaho-hadoop-shims-hbase-comparators</artifactId>
                    <classifier>test-sources</classifier>
                    <overWrite>false</overWrite>
                    <outputDirectory>${project.build.directory}/test-src</outputDirectory>
                  </artifactItem>
-->
                  <artifactItem>
                    <groupId>org.pentaho</groupId>
                    <artifactId>pentaho-hadoop-shims-common-hadoop-shim</artifactId>
                    <classifier>test-sources</classifier>
                    <overWrite>false</overWrite>
                    <outputDirectory>${project.build.directory}/test-src</outputDirectory>
                  </artifactItem>
                  <artifactItem>
                    <groupId>org.pentaho</groupId>
                    <artifactId>pentaho-hadoop-shims-common-mapred</artifactId>
                    <classifier>test-sources</classifier>
                    <overWrite>false</overWrite>
                    <outputDirectory>${project.build.directory}/test-src</outputDirectory>
                  </artifactItem>
                </artifactItems>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <executions>
            <execution>
              <id>add-source</id>
              <phase>generate-sources</phase>
              <goals>
                <goal>add-source</goal>
              </goals>
              <configuration>
                <sources>
                  <source>${project.build.directory}/src</source>
                </sources>
              </configuration>
            </execution>
            <execution>
              <id>add-resource</id>
              <phase>generate-resources</phase>
              <goals>
                <goal>add-resource</goal>
              </goals>
              <configuration>
                <resources>
                  <resource>
                    <directory>${project.build.directory}/src/META-INF</directory>
                    <targetPath>META-INF</targetPath>
                  </resource>
                  <resource>
                    <directory>${project.build.directory}/src</directory>
                    <includes>
                      <include>**/*.properties</include>
                    </includes>
                  </resource>
                </resources>
              </configuration>
            </execution>
            <execution>
              <id>add-integration-test-resource</id>
              <phase>generate-test-resources</phase>
              <goals>
                <goal>add-test-resource</goal>
              </goals>
              <configuration>
                <resources>
                  <resource>
                    <directory>${project.build.directory}/test-src</directory>
                    <targetPath>${project.build.directory}/it-classes</targetPath>
                    <includes>
                      <include>**/*</include>
                    </includes>
                  </resource>
                </resources>
              </configuration>
            </execution>
            <execution>
              <id>add-test-resource</id>
              <phase>generate-test-resources</phase>
              <goals>
                <goal>add-test-resource</goal>
              </goals>
              <configuration>
                <resources>
                  <resource>
                    <directory>${project.build.directory}/test-src</directory>
                    <includes>
                      <include>**/*</include>
                    </includes>
                  </resource>
                </resources>
              </configuration>
            </execution>
            <execution>
              <id>add-test-source</id>
              <phase>generate-test-sources</phase>
              <goals>
                <goal>add-test-source</goal>
              </goals>
              <configuration>
                <sources>
                  <source>${project.build.directory}/test-src</source>
                </sources>
              </configuration>
            </execution>
          </executions>
          <inherited>true</inherited>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <profiles>

    <profile>
      <id>all</id>
      <activation>
        <property>
          <name>!skipDefault</name>
        </property>
      </activation>
      <modules>
        <module>hdp25</module>
        <module>hdp26</module>
        <!-- <module>cdh512</module> -->
        <module>cdh513</module>
        <module>cdh514</module>
        <module>mapr520</module>
        <module>mapr60</module>
        <module>emr59</module>
        <module>emr511</module>
        <module>hdi35</module>
      </modules>
    </profile>


    <profile>
      <id>hdp25</id>
      <activation>
        <property>
          <name>!skipDefault</name>
        </property>
      </activation>
      <modules>
        <module>hdp25</module>
      </modules>
    </profile>

    <profile>
      <id>hdp26</id>
      <activation>
        <property>
          <name>!skipDefault</name>
        </property>
      </activation>
      <modules>
        <module>hdp26</module>
      </modules>
    </profile>
    <!--
        <profile>
          <id>cdh512</id>
          <activation>
            <property>
              <name>!skipDefault</name>
            </property>
          </activation>
          <modules>
            <module>cdh512</module>
          </modules>
        </profile>
    -->
    <profile>
      <id>cdh513</id>
      <activation>
        <property>
          <name>!skipDefault</name>
        </property>
      </activation>
      <modules>
        <module>cdh513</module>
      </modules>
    </profile>

    <profile>
      <id>cdh514</id>
      <activation>
        <property>
          <name>!skipDefault</name>
        </property>
      </activation>
      <modules>
        <module>cdh514</module>
      </modules>
    </profile>


    <profile>
      <id>mapr520</id>
      <activation>
        <property>
          <name>!skipDefault</name>
        </property>
      </activation>
      <modules>
        <module>mapr520</module>
      </modules>
    </profile>

    <profile>
      <id>mapr60</id>
      <activation>
        <property>
          <name>!skipDefault</name>
        </property>
      </activation>
      <modules>
        <module>mapr60</module>
      </modules>
    </profile>

    <profile>
      <id>emr59</id>
      <activation>
        <property>
          <name>!skipDefault</name>
        </property>
      </activation>
      <modules>
        <module>emr59</module>
      </modules>
    </profile>

    <profile>
      <id>emr511</id>
      <activation>
        <property>
          <name>!skipDefault</name>
        </property>
      </activation>
      <modules>
        <module>emr511</module>
      </modules>
    </profile>

    <profile>
      <id>hdi35</id>
      <activation>
        <property>
          <name>!skipDefault</name>
        </property>
      </activation>
      <modules>
        <module>hdi35</module>
      </modules>
    </profile>

  </profiles>
</project>
