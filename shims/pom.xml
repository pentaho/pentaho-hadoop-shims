<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
<modelVersion>4.0.0</modelVersion>
<parent>
  <groupId>org.pentaho</groupId>
  <artifactId>pentaho-hadoop-shims</artifactId>
  <version>10.3.0.0-SNAPSHOT</version>
</parent>

<groupId>org.pentaho.hadoop.shims</groupId>
<artifactId>pentaho-hadoop-shims-list</artifactId>
<version>10.3.0.0-SNAPSHOT</version>
<packaging>pom</packaging>

<properties>
  <oss.license.directory>${project.build.directory}/oss_license</oss.license.directory>
  <xerces.version>2.8.1</xerces.version>
  <com.yammer.metrics.version>2.2.0</com.yammer.metrics.version>
  <org.safehaus.jug.version>2.0.0</org.safehaus.jug.version>
  <commons-lang.version>2.6</commons-lang.version>
  <com.codahale.metrics.version>3.0.1</com.codahale.metrics.version>
  <com.igormaznitsa.jcp.version>6.1.2</com.igormaznitsa.jcp.version>
  <bundle.export.version>8.0.513.cdh</bundle.export.version>
  <bundle.karaf.export.packages>org.apache.htrace;version=${bundle.export.version},
    org.pentaho.hadoop.mapreduce;version=${bundle.export.version},
    com.google.common.annotations;version=${bundle.export.version},
    org.codehaus.jackson;version=${bundle.export.version},
    org.apache.hadoop.security;version=${bundle.export.version},
    org.apache.hadoop.security.token;version=${bundle.export.version},
    org.apache.hadoop.conf;version=${bundle.export.version},
    org.apache.hadoop.fs;version=${bundle.export.version},
    org.apache.hadoop.hdfs;version=${bundle.export.version},
    com.google.protobuf;version=${bundle.export.version},
    org.apache.commons.codec;version=${bundle.export.version},
    org.apache.commons.codec.binary;version=${bundle.export.version},
    org.apache.hadoop.classification;version=${bundle.export.version},
    org.apache.commons.cli;version=${bundle.export.version},
    org.apache.hadoop.io;version=${bundle.export.version},
    org.apache.hadoop.io.compress;version=${bundle.export.version},
    org.apache.hadoop.net;version=${bundle.export.version},
    org.apache.hadoop.ipc;version=${bundle.export.version},
    org.apache.hadoop.ipc.metrics;version=${bundle.export.version},
    org.apache.hadoop;version=${bundle.export.version},
    org.apache.knox.gateway;version=${bundle.export.version},
    org.apache.hadoop.util;version=${bundle.export.version},
    org.apache.hadoop.metrics2;version=${bundle.export.version},
    org.apache.hadoop.mapred;version=${bundle.export.version},
    org.apache.hadoop.mapreduce;version=${bundle.export.version},
    org.apache.zookeeper;version=${bundle.export.version},
    org.apache.jute;version=${bundle.export.version},
    org.apache.knox.gateway.shell;version=${bundle.export.version},
    io.netty;version=${bundle.export.version},
    io.netty.channel;version=${bundle.export.version},
    io.airlift.compress;version=${bundle.export.version},
    io.airlift.compress.snappy;version=${bundle.export.version},
    io.airlift.compress.lzo;version=${bundle.export.version},
    io.airlift.compress.lz4;version=${bundle.export.version},
    com.yammer.metrics;version=${bundle.export.version},
    org.pentaho.hdfs.vfs;version=${bundle.export.version}</bundle.karaf.export.packages>
</properties>
<dependencyManagement>
  <dependencies>
    <dependency>
      <groupId>pentaho</groupId>
      <artifactId>pentaho-hdfs-vfs</artifactId>
      <version>${pentaho-hdfs-vfs.version}</version>
      <scope>compile</scope>
      <exclusions>
        <exclusion>
          <artifactId>*</artifactId>
          <groupId>*</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.safehaus.jug</groupId>
      <artifactId>jug-lgpl</artifactId>
      <version>${org.safehaus.jug.version}</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <artifactId>*</artifactId>
          <groupId>*</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.osgi</groupId>
      <artifactId>osgi.core</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.yammer.metrics</groupId>
      <artifactId>metrics-core</artifactId>
      <version>${com.yammer.metrics.version}</version>
      <scope>compile</scope>
      <exclusions>
        <exclusion>
          <artifactId>*</artifactId>
          <groupId>*</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
      <version>${commons-lang.version}</version>
      <scope>compile</scope>
      <exclusions>
        <exclusion>
          <artifactId>*</artifactId>
          <groupId>*</groupId>
        </exclusion>
      </exclusions>
    </dependency>
  </dependencies>
</dependencyManagement>
<dependencies>
</dependencies>
<build>
  <pluginManagement>
    <plugins>
      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>unpack-common-sources</id>
            <phase>process-sources</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.pentaho.hadoop.shims</groupId>
                  <artifactId>pentaho-hadoop-shims-common-fragment-V1</artifactId>
                  <classifier>sources</classifier>
                  <overWrite>false</overWrite>
                  <outputDirectory>${project.build.directory}/src</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>add-source</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>${project.build.directory}/src</source>
              </sources>
            </configuration>
          </execution>
          <execution>
            <id>add-resource</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>add-resource</goal>
            </goals>
            <configuration>
              <resources>
                <resource>
                  <directory>${project.build.directory}/src/META-INF</directory>
                  <targetPath>META-INF</targetPath>
                </resource>
                <resource>
                  <directory>${project.build.directory}/src</directory>
                  <includes>
                    <include>**/*.properties</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>add-integration-test-resource</id>
            <phase>generate-test-resources</phase>
            <goals>
              <goal>add-test-resource</goal>
            </goals>
            <configuration>
              <resources>
                <resource>
                  <directory>${project.build.directory}/test-src</directory>
                  <targetPath>${project.build.directory}/it-classes</targetPath>
                  <includes>
                    <include>**/*</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>add-test-resource</id>
            <phase>generate-test-resources</phase>
            <goals>
              <goal>add-test-resource</goal>
            </goals>
            <configuration>
              <resources>
                <resource>
                  <directory>${project.build.directory}/test-src</directory>
                  <includes>
                    <include>**/*</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>add-test-source</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>add-test-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>${project.build.directory}/test-src</source>
              </sources>
            </configuration>
          </execution>
        </executions>
        <inherited>true</inherited>
      </plugin>
    </plugins>
  </pluginManagement>
</build>

<profiles>
  <profile>
    <!-- This profile controls the required build configurations for the generation of shim KARs.
    We are using a profile because descendants modules vary in nature (not all are KARs). -->
    <id>configure-shim-kars-build</id>
    <activation>
      <file>
        <exists>${basedir}/src/main/feature</exists>
      </file>
    </activation>
    <properties>
      <karaf-maven-plugin.includeTransitiveDependency>false</karaf-maven-plugin.includeTransitiveDependency>
    </properties>

  </profile>

  <profile>
    <id>all</id>
    <activation>
      <property>
        <name>!skipDefault</name>
      </property>
    </activation>
    <modules>
      <module>emr521</module>
      <module>dataproc1421</module>
      <module>cdpdc71</module>
      <module>apache</module>
      <module>hdi40</module>
      <module>apachevanilla</module>
      <module>emr700</module>
    </modules>
  </profile>

  <profile>
    <id>emr521</id>
    <activation>
      <property>
        <name>!skipDefault</name>
      </property>
    </activation>
    <modules>
      <module>emr521</module>
    </modules>
  </profile>

  <profile>
    <id>dataproc1421</id>
    <activation>
      <property>
        <name>!skipDefault</name>
      </property>
    </activation>
    <modules>
      <module>dataproc1421</module>
    </modules>
    </profile>
  <profile>
    <id>cdpdc71</id>
    <activation>
      <property>
        <name>!skipDefault</name>
      </property>
    </activation>
    <modules>
      <module>cdpdc71</module>
    </modules>
  </profile>
  <profile>
    <id>hdi40</id>
    <activation>
      <property>
        <name>!skipDefault</name>
      </property>
    </activation>
    <modules>
      <module>hdi40</module>
    </modules>
  </profile>
  <profile>
    <id>apachevanilla</id>
    <activation>
      <property>
        <name>!skipDefault</name>
      </property>
    </activation>
    <modules>
      <module>apachevanilla</module>
    </modules>
  </profile>
  <profile>
    <id>emr700</id>
    <activation>
      <property>
        <name>!skipDefault</name>
      </property>
    </activation>
    <modules>
      <module>emr700</module>
    </modules>
  </profile>

</profiles>
</project>
