<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.pentaho</groupId>
    <artifactId>pentaho-hadoop-shims-emr511-reactor</artifactId>
    <version>9.0.0.0-SNAPSHOT</version>
  </parent>
  <artifactId>pentaho-hadoop-shims-emr511-common</artifactId>
  <version>9.0.0.0-SNAPSHOT</version>
  <packaging>bundle</packaging>
  <dependencies>
    <dependency>
      <groupId>org.xerial.snappy</groupId>
      <artifactId>snappy-java</artifactId>
      <version>${org.xerial.snappy.version}</version>
      <exclusions>
        <exclusion>
          <groupId>*</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-client</artifactId>
      <version>${org.apache.hadoop.version}</version>
      <exclusions>
        <exclusion>
          <groupId>*</groupId>
          <artifactId>jline</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-mapreduce-client-core</artifactId>
      <version>${org.apache.hadoop.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-mapreduce-client-app</artifactId>
      <version>${org.apache.hadoop.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-mapreduce-client-common</artifactId>
      <version>${org.apache.hadoop.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-mapreduce-client-jobclient</artifactId>
      <version>${org.apache.hadoop.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-mapreduce-client-shuffle</artifactId>
      <version>${org.apache.hadoop.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-annotations</artifactId>
      <version>${org.apache.hadoop.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-yarn-api</artifactId>
      <version>${org.apache.hadoop.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-yarn-common</artifactId>
      <version>${org.apache.hadoop.version}</version>
      <exclusions>
        <!-- exclude not to conflict with default folder -->
        <exclusion>
          <groupId>javax.xml.stream</groupId>
          <artifactId>stax-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-yarn-server-applicationhistoryservice</artifactId>
      <version>${org.apache.hadoop.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-yarn-server-common</artifactId>
      <version>${org.apache.hadoop.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-yarn-server-resourcemanager</artifactId>
      <version>${org.apache.hadoop.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-yarn-server-web-proxy</artifactId>
      <version>${org.apache.hadoop.version}</version>
    </dependency>
    <dependency>
      <groupId>org.pentaho</groupId>
      <artifactId>pentaho-hadoop-shims-common-hadoop-shim</artifactId>
      <version>${project.version}</version>
      <classifier>sources</classifier>
    </dependency>
    <dependency>
      <groupId>org.pentaho</groupId>
      <artifactId>pentaho-hadoop-shims-common-shim</artifactId>
      <version>${project.version}</version>
      <classifier>sources</classifier>
    </dependency>
    <dependency>
      <groupId>pentaho</groupId>
      <artifactId>pentaho-hdfs-vfs</artifactId>
    </dependency>
    <dependency>
      <groupId>org.pentaho</groupId>
      <artifactId>pentaho-big-data-impl-shim-hdfs</artifactId>
      <version>${project.version}</version>
      <classifier>sources</classifier>
    </dependency>
    <dependency>
      <groupId>org.osgi</groupId>
      <artifactId>org.osgi.core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.pentaho</groupId>
      <artifactId>pentaho-hadoop-shims-common-mapred</artifactId>
      <version>${project.version}</version>
      <classifier>sources</classifier>
    </dependency>

    <dependency>
      <groupId>org.pentaho</groupId>
      <artifactId>common-sqoop-shim</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>org.pentaho</groupId>
      <artifactId>pentaho-big-data-impl-shim-sqoop</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.pentaho</groupId>
      <artifactId>pentaho-big-data-impl-shim-mapreduce</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>org.pentaho</groupId>
      <artifactId>common-pig-shim</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>org.pentaho</groupId>
      <artifactId>pentaho-big-data-impl-shim-pig</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>org.pentaho</groupId>
      <artifactId>common-format-shim</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>org.pentaho</groupId>
      <artifactId>pentaho-big-data-impl-shim-format</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.orc</groupId>
      <artifactId>orc-core</artifactId>
      <version>${org.apache.orc.version}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.sqoop</groupId>
      <artifactId>sqoop</artifactId>
      <version>${sqoop.version}</version>
      <exclusions>
        <exclusion>
          <groupId>*</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.apache.pig</groupId>
      <artifactId>pig</artifactId>
      <version>${pig.version}</version>
      <exclusions>
        <exclusion>
          <groupId>*</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.antlr</groupId>
      <artifactId>antlr-runtime</artifactId>
      <version>${org.antlr.version}</version>
      <exclusions>
        <exclusion>
          <groupId>*</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>com.twitter</groupId>
      <artifactId>parquet-pig</artifactId>
      <version>${parquet.version}</version>
      <exclusions>
        <exclusion>
          <groupId>*</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>com.twitter</groupId>
      <artifactId>parquet-hadoop-bundle</artifactId>
      <version>${parquet.version}</version>
    </dependency>

    <dependency>
      <groupId>org.pentaho.di.plugins</groupId>
      <artifactId>kettle-log4j-core</artifactId>
      <version>${pdi.version}</version>
    </dependency>

    <dependency>
      <groupId>com.thoughtworks.xstream</groupId>
      <artifactId>xstream</artifactId>
      <version>1.4.9</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.avro</groupId>
      <artifactId>avro</artifactId>
      <version>${org.apache.parquet.version}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.hive</groupId>
      <artifactId>hive-jdbc</artifactId>
      <version>${hive.jdbc.version}</version>
    </dependency>

    <dependency>
      <groupId>joda-time</groupId>
      <artifactId>joda-time</artifactId>
      <version>${joda-time.version}</version>
      <exclusions>
        <exclusion>
          <groupId>*</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.apache.parquet</groupId>
      <artifactId>parquet-hadoop-bundle</artifactId>
      <version>1.8.1</version>
    </dependency>

  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>unpack-common-sources</id>
            <phase>process-sources</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.pentaho</groupId>
                  <artifactId>pentaho-hadoop-shims-common-shim</artifactId>
                  <classifier>sources</classifier>
                  <overWrite>false</overWrite>
                  <outputDirectory>${project.build.directory}/src</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>org.pentaho</groupId>
                  <artifactId>pentaho-hadoop-shims-common-hadoop-shim</artifactId>
                  <classifier>sources</classifier>
                  <overWrite>false</overWrite>
                  <outputDirectory>${project.build.directory}/src</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>org.pentaho</groupId>
                  <artifactId>pentaho-hadoop-shims-common-mapred</artifactId>
                  <classifier>sources</classifier>
                  <overWrite>false</overWrite>
                  <outputDirectory>${project.build.directory}/src</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>org.pentaho</groupId>
                  <artifactId>pentaho-big-data-impl-shim-hdfs</artifactId>
                  <classifier>sources</classifier>
                  <overWrite>false</overWrite>
                  <outputDirectory>${project.build.directory}/src</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>org.pentaho</groupId>
                  <artifactId>common-sqoop-shim</artifactId>
                  <classifier>sources</classifier>
                  <overWrite>false</overWrite>
                  <outputDirectory>${project.build.directory}/src</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>org.pentaho</groupId>
                  <artifactId>pentaho-big-data-impl-shim-sqoop</artifactId>
                  <classifier>sources</classifier>
                  <overWrite>false</overWrite>
                  <outputDirectory>${project.build.directory}/src</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>org.pentaho</groupId>
                  <artifactId>pentaho-big-data-impl-shim-mapreduce</artifactId>
                  <classifier>sources</classifier>
                  <overWrite>false</overWrite>
                  <outputDirectory>${project.build.directory}/src</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>org.pentaho</groupId>
                  <artifactId>common-pig-shim</artifactId>
                  <classifier>sources</classifier>
                  <overWrite>false</overWrite>
                  <outputDirectory>${project.build.directory}/src</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>org.pentaho</groupId>
                  <artifactId>pentaho-big-data-impl-shim-pig</artifactId>
                  <classifier>sources</classifier>
                  <overWrite>false</overWrite>
                  <outputDirectory>${project.build.directory}/src</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>org.pentaho</groupId>
                  <artifactId>common-format-shim</artifactId>
                  <classifier>sources</classifier>
                  <overWrite>false</overWrite>
                  <outputDirectory>${project.build.directory}/src</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>org.pentaho</groupId>
                  <artifactId>pentaho-big-data-impl-shim-format</artifactId>
                  <classifier>sources</classifier>
                  <overWrite>false</overWrite>
                  <outputDirectory>${project.build.directory}/src</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-dependencies</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <markersDirectory>${project.build.directory}/dependencies/dependency-maven-plugin-markers
              </markersDirectory>
              <artifactItems>
                <artifactItem>
                  <groupId>pentaho</groupId>
                  <artifactId>pentaho-hdfs-vfs</artifactId>
                  <version>9.0.0.0-SNAPSHOT</version>
                  <type>jar</type>
                  <outputDirectory>${project.build.directory}/dependencies/hadoop-common</outputDirectory>
                  <includes>META-INF/vfs-providers.xml</includes>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.pentaho</groupId>
        <artifactId>shim-bundle-plugin</artifactId>
        <version>${shim-bundle-plugin.version}</version>
        <configuration>
          <resolverFilters>
            <resolverFilter>
              <!--<include>-->
              <!--*:hadoop-mapreduce*,*:hadoop-hdfs*,*hadoop-annotation*,*:hadoop-yarn*,*:hadoop-client,commons-lang3,*:pig-->
              <!--</include>-->
              <include>
                *:hadoop-mapreduce*,*:hadoop-hdfs*,*hadoop-annotation*,*:hadoop-yarn*,*:hadoop-client,commons-lang3
              </include>
              <exclude>
                *:*tests*,*:*xerces*,*:*xml*,*:*commons-logging*,*:log4j*,*:hbase-client
              </exclude>
              <transitive>true</transitive>
            </resolverFilter>
            <resolverFilter>
              <include>
                *:*java-protobuf,*:*metrics*,*:*pentaho-hdfs-vfs,*:sqoop,*:antlr-runtime,*:parquet*,*:orc*,*:pig
              </include>
              <exclude>*:*tests*</exclude>
              <transitive>false</transitive>
            </resolverFilter>
          </resolverFilters>
        </configuration>
        <executions>
          <execution>
            <phase>prepare-package</phase>
            <goals>
              <goal>resolve</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.igormaznitsa</groupId>
        <artifactId>jcp</artifactId>
        <version>${com.igormaznitsa.jcp.version}</version>
        <executions>
          <execution>
            <id>preprocessSources</id>
            <phase>process-sources</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <globalVars>
            <property>
              <name>shim_type</name>
              <value>${shim.type}</value>
            </property>
            <property>
              <name>shim_name</name>
              <value>${shim.name}</value>
            </property>
          </globalVars>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
        <version>${dependency.maven-bundle-plugin.version}</version>
        <extensions>true</extensions>
        <configuration>
          <instructions>
            <Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>
            <DynamicImport-Package>*</DynamicImport-Package>
            <Import-Package>
              org.pentaho.hadoop.shim;version=${pentaho-osgi-bundles.version},
              org.pentaho.hadoop.shim.api.*;version=${pentaho-osgi-bundles.version},
              org.pentaho.hadoop.shim.spi.*;version=${pentaho-osgi-bundles.version},
            </Import-Package>
            <_exportcontents>
              ${bundle.karaf.export.packages}
            </_exportcontents>
            <!--org.apache.avro;version=8.0.0.emr511,-->
            <Embed-Dependency>*</Embed-Dependency>
          </instructions>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>