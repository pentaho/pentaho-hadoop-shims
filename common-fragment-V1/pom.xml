<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.pentaho</groupId>
    <artifactId>pentaho-hadoop-shims</artifactId>
    <version>10.3.0.0-SNAPSHOT</version>
  </parent>

  <groupId>org.pentaho.hadoop.shims</groupId>
  <artifactId>pentaho-hadoop-shims-common-fragment-V1</artifactId>
  <version>10.3.0.0-SNAPSHOT</version>
  <packaging>bundle</packaging>

  <properties>
    <pentaho-code.version>11.0.0.0</pentaho-code.version>
    <integration-test.src>src/it/java</integration-test.src>
    <gateway-shell.version>1.0.0.3.0.0.0-1634</gateway-shell.version>
  </properties>

  <profiles>

    <profile>
      <id>hdp26</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <properties>
        <org.apache.avro.version>1.8.0</org.apache.avro.version>
        <org.apache.hbase.version>1.4.8</org.apache.hbase.version>
        <org.apache.hadoop.version-hdp26>2.7.3.2.6.0.3-8</org.apache.hadoop.version-hdp26>
        <org.apache.hive.version>1.2.1000.2.6.0.3-8</org.apache.hive.version>
        <org.apache.oozie.version>4.2.0.2.6.0.3-8</org.apache.oozie.version>
        <parquet.version>1.8.1</parquet.version>
        <parquet.cloudera.version>1.5.0-cdh5.14.0</parquet.cloudera.version>
        <pig.version>0.16.0.2.6.0.3-8</pig.version>
        <sqoop.version>1.4.6.2.6.0.3-8</sqoop.version>
        <dependency.pig.classifier>h2</dependency.pig.classifier>
      </properties>
      <dependencies>
        <dependency>
          <groupId>org.apache.karaf.jaas</groupId>
          <artifactId>org.apache.karaf.jaas.config</artifactId>
        </dependency>
        <dependency>
          <groupId>pentaho</groupId>
          <artifactId>pentaho-big-data-impl-shim-common</artifactId>
          <version>${big-data-plugin.version}</version>
          <scope>compile</scope>
        </dependency>
        <dependency>
          <groupId>com.twitter</groupId>
          <artifactId>parquet-hadoop-bundle</artifactId>
          <version>${parquet.cloudera.version}</version>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>org.apache.avro</groupId>
          <artifactId>avro</artifactId>
          <version>${org.apache.avro.version}</version>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>org.apache.avro</groupId>
          <artifactId>avro-mapred</artifactId>
          <version>${org.apache.avro.version}</version>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>org.apache.hive</groupId>
          <artifactId>hive-jdbc</artifactId>
          <version>${org.apache.hive.version}</version>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>org.apache.orc</groupId>
          <artifactId>orc-core</artifactId>
          <version>${org.apache.orc.version}</version>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>org.apache.sqoop</groupId>
          <artifactId>sqoop</artifactId>
          <version>${sqoop.version}</version>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>org.apache.hbase</groupId>
          <artifactId>hbase-server</artifactId>
          <version>${org.apache.hbase.version}</version>
          <scope>provided</scope>
          <exclusions>
            <exclusion>
              <groupId>org.apache.hadoop</groupId>
              <artifactId>hadoop-auth</artifactId>
            </exclusion>
          </exclusions>
        </dependency>
        <dependency>
          <groupId>org.apache.oozie</groupId>
          <artifactId>oozie-client</artifactId>
          <version>${org.apache.oozie.version}</version>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-common</artifactId>
          <!--todo: ask if this is a good idea -->
          <version>${org.apache.hadoop.version-hdp26}</version>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>org.apache.pig</groupId>
          <artifactId>pig</artifactId>
          <version>${pig.version}</version>
          <classifier>${dependency.pig.classifier}</classifier>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>org.apache.logging.log4j</groupId>
          <artifactId>log4j-core</artifactId>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>org.apache.logging.log4j</groupId>
          <artifactId>log4j-api</artifactId>
          <scope>provided</scope>
        </dependency>
      </dependencies>
    </profile>
  </profiles>
  <dependencies>
    <dependency>
      <groupId>com.amazonaws</groupId>
      <artifactId>aws-java-sdk-core</artifactId>
      <version>${aws-java-sdk.version}</version>
      <exclusions>
        <exclusion>
          <groupId>*</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.karaf.jaas</groupId>
      <artifactId>org.apache.karaf.jaas.config</artifactId>
    </dependency>
    <dependency>
      <groupId>org.osgi</groupId>
      <artifactId>org.osgi.core</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.thoughtworks.xstream</groupId>
      <artifactId>xstream</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.pentaho</groupId>
      <artifactId>shim-api-core</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.pentaho</groupId>
      <artifactId>shim-api</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.pentaho.di.plugins</groupId>
      <artifactId>pentaho-metastore-locator-api</artifactId>
      <version>${pdi.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>pentaho</groupId>
      <artifactId>pentaho-platform-api</artifactId>
      <version>${platform.version}</version>
      <exclusions>
        <exclusion>
          <groupId>*</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.pentaho</groupId>
      <artifactId>pentaho-hadoop-shims-common-mapreduce</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.pentaho</groupId>
      <artifactId>pentaho-hadoop-shims-common-services-api</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>${org.mockito.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-inline</artifactId>
      <version>${org.mockito.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.knox</groupId>
      <artifactId>gateway-shell</artifactId>
      <version>${gateway-shell.version}</version>
    </dependency>
    <dependency>
      <groupId>pentaho-kettle</groupId>
      <artifactId>kettle-core</artifactId>
      <version>${pdi.version}</version>
      <classifier>tests</classifier>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <executions>
          <!-- dependencies for IT compile get hosed by shim-bundle-plugin,
               I'm not sure why that happens, but as workaround disabling
               IT compile.  All tests are run as part of test phase. -->
          <execution>
            <id>test-integration_compile</id>
            <phase>${test-integration_compile-phase}</phase>
            <configuration>
              <skip>true</skip>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.pentaho</groupId>
        <artifactId>shim-bundle-plugin</artifactId>
        <version>${shim-bundle-plugin.version}</version>
        <configuration>
          <resolverFilters>
            <resolverFilter>
              <exclude>com.fasterxml.jackson.core:jackson-databind</exclude>
            </resolverFilter>
          </resolverFilters>
        </configuration>
        <executions>
          <execution>
            <phase>prepare-package</phase>
            <goals>
              <goal>resolve</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
        <extensions>true</extensions>
        <configuration>
          <instructions>
            <Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>
            <Bundle-Version>${pentaho-osgi-bundles.version}</Bundle-Version>
            <Fragment-Host>pentaho-hadoop-driver-V1</Fragment-Host>
            <Pentaho-Code-Version>${pentaho-code.version}</Pentaho-Code-Version>
            <Import-Package>
            </Import-Package>
            <_exportcontents>
            </_exportcontents>
            <Embed-Dependency>*</Embed-Dependency>
          </instructions>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
